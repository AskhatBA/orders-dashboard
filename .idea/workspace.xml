<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5e03dd83-6945-41c0-810e-887343cc656c" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.eslintrc.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.prettierrc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/craco.config.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/data/orders.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/api/orders.api.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/header/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/header/styles.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/input/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/input/styles.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/sidebar/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/components/sidebar/styles.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/enums/order.enums.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/layout/main/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/layout/main/styles.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/router/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/screens/dashboard/components/order-card/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/screens/dashboard/components/order-card/styles.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/screens/dashboard/components/orders-board/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/screens/dashboard/components/orders-board/styles.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/screens/dashboard/components/topbar/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/screens/dashboard/components/topbar/styles.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/screens/dashboard/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/style/font-family.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/style/global-style.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/style/palette.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/style/theme.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/theme.d.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/types/order.types.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.test.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/App.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/App.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/logo.svg" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/reportWebVitals.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/reportWebVitals.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2XWTaQBtlUnYsiNuXhoX3qOVe8Z" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Askhat/Documents/projects/udevs-test&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.standard&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.standard&quot;: &quot;&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;yarn&quot;,
    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;C:\\Users\\Askhat\\Documents\\projects\\udevs-test\\node_modules\\prettier&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;settings.javascript.linters.eslint&quot;,
    &quot;ts.external.directory.path&quot;: &quot;C:\\Users\\Askhat\\Documents\\projects\\udevs-test\\node_modules\\typescript\\lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Askhat\Documents\projects\udevs-test" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Askhat\Documents\projects\udevs-test\src\screens\dashboard\components\order-card" />
      <recent name="C:\Users\Askhat\Documents\projects\udevs-test\src\layout\main-layout" />
      <recent name="C:\Users\Askhat\Documents\projects\udevs-test\src" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5e03dd83-6945-41c0-810e-887343cc656c" name="Changes" comment="" />
      <created>1698743899160</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1698743899160</updated>
      <workItem from="1698743900839" duration="24000" />
      <workItem from="1698743944966" duration="1479000" />
      <workItem from="1698746349970" duration="17335000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>